{"version":3,"sources":["navbar/index.jsx","App.js","reportWebVitals.js","firebase.js","icon/index.jsx","broadcasting/index.jsx","comitive/index.jsx","contatti/index.jsx","index.js"],"names":["Navbar","navigate","useNavigate","goTo","path","React","createElement","window","location","pathname","className","onClick","App","Fragment","Grid","container","rowSpacing","columnSpacing","xs","sm","md","item","Paper","elevation","sx","padding","Typography","gutterBottom","variant","component","color","Button","fullWidth","marginTop","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","initializeApp","getDatabaseTable","getAnalytics","tableName","db","getDatabase","dbRef","ref","child","concat","Icon","icon","FontAwesomeIcon","Broadcasting","data","setData","useState","isAddingNewRow","setIsAddingNewRow","formValue","setFormValue","abitazione","mese","isEditing","setIsEditing","table","fetchData","get","snapshot","exists","val","setValues","value","key","prev","editRow","currentRow","set","clearForm","useEffect","TableContainer","Table","minWidth","aria-label","endIcon","fas","faPlus","disabled","TableHead","TableRow","TableCell","align","fontWeight","TableBody","Object","entries","map","row","index","scope","display","flexDirection","faEdit","id","removeRow","marginLeft","faTrash","TextField","label","onChange","e","target","faSave","faClose","setBroadcastingData","push","Comitive","argomento","conduttore","setComitiveData","Contatti","cellulare","indirizzo","nome","paese","telefono","visitaIncoraggiamento","nicolas","ruben","transformData","dataInput","anno","split","getFormattedDate","position","top","left","zIndex","backgroundColor","type","setContattiData","root","ReactDOM","createRoot","document","getElementById","router","createBrowserRouter","children","element","render","StrictMode","RouterProvider"],"mappings":"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","file":"static/js/main.b48aab3f.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport \"./style.css\"\nexport default function Navbar() {\n  const currentTitle = {\n    '/broadcasting': 'Broadcasting',\n    '/comitive': 'Comitive',\n    '/contatti': 'Proclamatori',\n    '/': 'GESTIONALE SAVA 2',\n  }\n  const navigate = useNavigate();\n  const goTo = (path) => {\n    navigate(path);\n  };\n  return (\n    <div>\n      <header>\n        <h1>{currentTitle[window.location.pathname]}</h1>\n      </header>\n      <nav>\n        <span className=\"clickable\" onClick={()=>{goTo(\"/\")}}>Home</span>\n        <span className=\"clickable\" onClick={()=>{goTo(\"/broadcasting\")}}>Broadcasting</span>\n        <span className=\"clickable\" onClick={()=>{goTo(\"/comitive\")}}>Comitive</span>\n        <span className=\"clickable\" onClick={()=>{goTo(\"/contatti\")}}>Proclamatori</span>\n      </nav>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { createBrowserRouter, useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport Navbar from \"./navbar\";\nfunction App() {\n  const navigate = useNavigate();\n  const goTo = (path) => {\n    navigate(path);\n  };\n  return (\n    <>\n      <Navbar></Navbar>\n      <div className=\"cards-container\">\n        <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n          <Grid item xs={12} md={4}>\n            <Paper elevation={3} sx={{ padding: \"30px 12px 12px 12px\" }}>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                Broadcasting\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Tabella contenente le info relative a dove sono stati tenuti gli\n                ultimi broadcasting.\n                <br />\n                Se in un mese non è stato visto insieme la data relativa a quel\n                mese non apparira'\n              </Typography>\n              <Button\n                fullWidth\n                onClick={() => {\n                  goTo(\"broadcasting\");\n                }}\n                variant=\"contained\"\n                sx={{ marginTop: \"20px\" }}\n              >\n                vai a Broadcasting\n              </Button>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Paper elevation={3} sx={{ padding: \"30px 12px 12px 12px\" }}>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                Comitive\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Tabella contenente le info relative a tutte le varie comitive,\n                inclusi argomenti trattati e il conduttore\n                <br />\n              </Typography>\n              <Button\n                fullWidth\n                onClick={() => {\n                  goTo(\"comitive\");\n                }}\n                variant=\"contained\"\n                sx={{ marginTop: \"20px\" }}\n              >\n                vai a Comitive\n              </Button>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Paper elevation={3} sx={{ padding: \"30px 12px 12px 12px\" }}>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                Proclamatori\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Tabella contenente le info relative ai proclamatori, i loro\n                contattie altre info relative alle ultime visite di\n                incoraggiamento e a quando risale l'ultima volta che sono usciti\n                con Ruben/Nicolas\n              </Typography>\n              <Button\n                fullWidth\n                onClick={() => {\n                  goTo(\"contatti\");\n                }}\n                variant=\"contained\"\n                sx={{ marginTop: \"20px\" }}\n              >\n                vai a Proclamatori\n              </Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n      <footer>\n        <p>© 2024 - GESTIONALE SAVA 2 </p>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { child, get, getDatabase, push, ref } from \"firebase/database\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyA-oC5UfI8VWBqLBAj5y9u_eVNZwUBuU5E\",\n  authDomain: \"gestione-gruppo-servizio.firebaseapp.com\",\n  databaseURL:\n    \"https://gestione-gruppo-servizio-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"gestione-gruppo-servizio\",\n  storageBucket: \"gestione-gruppo-servizio.appspot.com\",\n  messagingSenderId: \"568226232254\",\n  appId: \"1:568226232254:web:a04028ec60cd8108b22bef\",\n  measurementId: \"G-19722K0XVD\",\n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);\nexport const firebaseAnalytics = getAnalytics(firebaseApp);\nexport const getDatabaseTable = (tableName) => {\n  const db = getDatabase(firebaseApp, firebaseConfig.databaseURL);\n  const dbRef = ref(db);\n  return child(dbRef, `/${tableName}`);\n};\n","import { fas } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react'\n\nexport default function Icon({icon}) {\n  return (\n    <FontAwesomeIcon icon={icon}></FontAwesomeIcon>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { getDatabaseTable } from \"../firebase\";\nimport { get, push, set } from \"firebase/database\";\nimport { Button, TextField } from \"@mui/material\";\nimport Icon from \"../icon\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport Navbar from \"../navbar\";\n\nexport default function Broadcasting() {\n  const [data, setData] = useState();\n  const [isAddingNewRow, setIsAddingNewRow] = useState(false);\n  const [formValue, setFormValue] = useState({\n    abitazione: \"\",\n    mese: \"\",\n  });\n  const [isEditing, setIsEditing] = useState(\"\");\n\n  const table = getDatabaseTable(\"broadcasting\");\n  const fetchData = () => {\n    get(table).then((snapshot) => {\n      if (snapshot.exists()) {\n        setData(snapshot.val());\n      }\n    });\n  };\n  const setValues = (value, key) => {\n    setFormValue((prev) => ({ ...prev, [key]: value }));\n  };\n  const setBroadcastingData = () => {\n    push(table, formValue);\n    setIsAddingNewRow(false);\n    clearForm();\n    fetchData();\n  };\n  const editRow = () => {\n    const currentRow = getDatabaseTable(`broadcasting/${isEditing}`);\n    set(currentRow, formValue);\n    setIsEditing(\"\");\n    clearForm();\n    fetchData();\n  };\n\n  const removeRow = (id) => {\n    const currentRow = getDatabaseTable(`broadcasting/${id}`);\n    set(currentRow, null);\n    fetchData();\n  };\n\n  const clearForm = () => {\n    setFormValue({ abitazione: \"\", mese: \"\" });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <Navbar></Navbar>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n          <caption>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              endIcon={<Icon icon={fas.faPlus}></Icon>}\n              onClick={() => {\n                setIsAddingNewRow(true);\n              }}\n              disabled={isAddingNewRow}\n            >\n              AGGIUNGI NUOVO BROADCASTING\n            </Button>\n          </caption>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                ABITAZIONI\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                DATA\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                ACTIONS\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data && (\n              <>\n                {Object.entries(data).map((row, index) => (\n                  <>\n                    {isEditing !== row[0] && (\n                      <TableRow key={`row-${index}`}>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].abitazione}\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].mese}\n                        </TableCell>\n                        <TableCell\n                          align=\"center\"\n                          component=\"th\"\n                          scope=\"row\"\n                          sx={{ display: \"flex\", flexDirection: \"row\" }}\n                        >\n                          <Button\n                            onClick={() => {\n                              setIsEditing(row[0]);\n                              setFormValue(row[1]);\n                            }}\n                            variant=\"contained\"\n                          >\n                            <Icon icon={fas.faEdit}></Icon>\n                          </Button>\n                          <Button\n                            onClick={() => {\n                              removeRow(row[0]);\n                            }}\n                            variant=\"contained\"\n                            color=\"error\"\n                            sx={{ marginLeft: \"5px\" }}\n                          >\n                            <Icon icon={fas.faTrash}></Icon>\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {isEditing === row[0] && (\n                      <TableRow key={`row-${index}-edit`}>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"Abitazione\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(e.target.value, \"abitazione\");\n                            }}\n                            value={formValue.abitazione}\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"Mese\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(e.target.value, \"mese\");\n                            }}\n                            value={formValue.mese}\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <Button onClick={editRow} variant=\"contained\">\n                            <Icon icon={fas.faSave}></Icon>\n                          </Button>\n                          <Button\n                            onClick={() => {\n                              setIsEditing(\"\");\n                            }}\n                            variant=\"outlined\"\n                            sx={{ marginLeft: \"5px\" }}\n                          >\n                            <Icon icon={fas.faClose}></Icon>\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </>\n                ))}\n              </>\n            )}\n            {isAddingNewRow && (\n              <TableRow key={`add-row`}>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"Abitazione\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(e.target.value, \"abitazione\");\n                    }}\n                    value={formValue.abitazione}\n                  ></TextField>\n                </TableCell>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"Mese\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(e.target.value, \"mese\");\n                    }}\n                    value={formValue.mese}\n                  ></TextField>\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  component=\"th\"\n                  scope=\"row\"\n                  sx={{ display: \"flex\", flexDirection: \"row\" }}\n                >\n                  <Button onClick={setBroadcastingData} variant=\"contained\">\n                    <Icon icon={fas.faSave}></Icon>\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      setIsAddingNewRow(false);\n                    }}\n                    variant=\"outlined\"\n                    sx={{ marginLeft: \"5px\" }}\n                  >\n                    <Icon icon={fas.faClose}></Icon>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <footer>\n        <p>© 2024 - GESTIONALE SAVA 2 </p>\n      </footer>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { getDatabaseTable } from \"../firebase\";\nimport { get, push, set } from \"firebase/database\";\nimport { Button, TextField } from \"@mui/material\";\nimport Icon from \"../icon\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport Navbar from \"../navbar\";\n\nexport default function Comitive() {\n  const [data, setData] = useState();\n  const [isAddingNewRow, setIsAddingNewRow] = useState(false);\n  const [formValue, setFormValue] = useState({\n    argomento: \"\",\n    conduttore: \"\",\n    mese: \"\",\n  });\n  const [isEditing, setIsEditing] = useState(\"\");\n\n  const table = getDatabaseTable(\"comitive\");\n  const fetchData = () => {\n    get(table).then((snapshot) => {\n      if (snapshot.exists()) {\n        setData(snapshot.val());\n      }\n    });\n  };\n  const setValues = (value, key) => {\n    setFormValue((prev) => ({ ...prev, [key]: value }));\n  };\n  const setComitiveData = () => {\n    push(table, formValue);\n    setIsAddingNewRow(false);\n    clearForm();\n    fetchData();\n  };\n  const editRow = () => {\n    const currentRow = getDatabaseTable(`comitive/${isEditing}`);\n    set(currentRow, formValue);\n    setIsEditing(\"\");\n    clearForm();\n    fetchData();\n  };\n\n  const removeRow = (id) => {\n    const currentRow = getDatabaseTable(`comitive/${id}`);\n    set(currentRow, null);\n    fetchData();\n  };\n\n  const clearForm = () => {\n    setFormValue({\n      argomento: \"\",\n      conduttore: \"\",\n      mese: \"\",\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <Navbar></Navbar>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n          <caption>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              endIcon={<Icon icon={fas.faPlus}></Icon>}\n              onClick={() => {\n                setIsAddingNewRow(true);\n              }}\n              disabled={isAddingNewRow}\n            >\n              AGGIUNGI NUOVA COMITIVA\n            </Button>\n          </caption>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                ARGOMENTO\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                CONDUTTORE\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                MESE\n              </TableCell>\n              <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\n                ACTIONS\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data && (\n              <>\n                {Object.entries(data).map((row, index) => (\n                  <>\n                    {isEditing !== row[0] && (\n                      <TableRow key={`row-${index}`}>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].argomento}\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].conduttore}\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].mese}\n                        </TableCell>\n                        <TableCell\n                          align=\"center\"\n                          component=\"th\"\n                          scope=\"row\"\n                          sx={{ display: \"flex\", flexDirection: \"row\" }}\n                        >\n                          <Button\n                            onClick={() => {\n                              setIsEditing(row[0]);\n                              setFormValue(row[1]);\n                            }}\n                            variant=\"contained\"\n                          >\n                            <Icon icon={fas.faEdit}></Icon>\n                          </Button>\n                          <Button\n                            onClick={() => {\n                              removeRow(row[0]);\n                            }}\n                            variant=\"contained\"\n                            color=\"error\"\n                            sx={{ marginLeft: \"5px\" }}\n                          >\n                            <Icon icon={fas.faTrash}></Icon>\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {isEditing === row[0] && (\n                      <TableRow key={`row-${index}-edit`}>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"Argomento\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(e.target.value, \"argomento\");\n                            }}\n                            value={formValue.argomento}\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"Conduttore\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(e.target.value, \"conduttore\");\n                            }}\n                            value={formValue.conduttore}\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"Mese\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(e.target.value, \"mese\");\n                            }}\n                            value={formValue.mese}\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <Button onClick={editRow} variant=\"contained\">\n                            <Icon icon={fas.faSave}></Icon>\n                          </Button>\n                          <Button\n                            onClick={() => {\n                              setIsEditing(\"\");\n                            }}\n                            variant=\"outlined\"\n                            sx={{ marginLeft: \"5px\" }}\n                          >\n                            <Icon icon={fas.faClose}></Icon>\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </>\n                ))}\n              </>\n            )}\n            {isAddingNewRow && (\n              <TableRow key={`add-row`}>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"Argomento\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(e.target.value, \"argomento\");\n                    }}\n                    value={formValue.argomento}\n                  ></TextField>\n                </TableCell>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"Conduttore\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(e.target.value, \"conduttore\");\n                    }}\n                    value={formValue.conduttore}\n                  ></TextField>\n                </TableCell>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"Mese\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(e.target.value, \"mese\");\n                    }}\n                    value={formValue.mese}\n                  ></TextField>\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  component=\"th\"\n                  scope=\"row\"\n                  sx={{ display: \"flex\", flexDirection: \"row\" }}\n                >\n                  <Button onClick={setComitiveData} variant=\"contained\">\n                    <Icon icon={fas.faSave}></Icon>\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      setIsAddingNewRow(false);\n                    }}\n                    variant=\"outlined\"\n                    sx={{ marginLeft: \"5px\" }}\n                  >\n                    <Icon icon={fas.faClose}></Icon>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <footer>\n        <p>© 2024 - GESTIONALE SAVA 2 </p>\n      </footer>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { getDatabaseTable } from \"../firebase\";\nimport { get, push, set } from \"firebase/database\";\nimport { Button, TextField } from \"@mui/material\";\nimport Icon from \"../icon\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport Navbar from \"../navbar\";\n\nexport default function Contatti() {\n  const [data, setData] = useState();\n  const [isAddingNewRow, setIsAddingNewRow] = useState(false);\n  const [formValue, setFormValue] = useState({\n    cellulare: \"\",\n    indirizzo: \"\",\n    nome: \"\",\n    paese: \"\",\n    telefono: \"\",\n    visitaIncoraggiamento: \"\",\n    nicolas: \"\",\n    ruben: \"\",\n  });\n  const [isEditing, setIsEditing] = useState(\"\");\n\n  const table = getDatabaseTable(\"contatti\");\n  const fetchData = () => {\n    get(table).then((snapshot) => {\n      if (snapshot.exists()) {\n        setData(snapshot.val());\n      }\n    });\n  };\n  const setValues = (value, key) => {\n    setFormValue((prev) => ({ ...prev, [key]: value }));\n  };\n  const setContattiData = () => {\n    push(table, formValue);\n    setIsAddingNewRow(false);\n    clearForm();\n    fetchData();\n  };\n  const editRow = () => {\n    const currentRow = getDatabaseTable(`contatti/${isEditing}`);\n    set(currentRow, formValue);\n    setIsEditing(\"\");\n    clearForm();\n    fetchData();\n  };\n\n  const removeRow = (id) => {\n    const currentRow = getDatabaseTable(`contatti/${id}`);\n    set(currentRow, null);\n    fetchData();\n  };\n\n  const clearForm = () => {\n    setFormValue({\n      cellulare: \"\",\n      indirizzo: \"\",\n      nome: \"\",\n      paese: \"\",\n      telefono: \"\",\n      visitaIncoraggiamento: \"\",\n      nicolas: \"\",\n      ruben: \"\",\n    });\n  };\n\n  const transformData = (dataInput) => {\n    // Dividi la stringa della data in anno, mese e giorno\n\n    // Estrai anno, mese e giorno\n    var anno = dataInput.split(\"-\")[0];\n    var mese = dataInput.split(\"-\")[1];\n    var giorno = dataInput.split(\"-\")[2];\n\n    // Formatta la data come gg/mm/aaaa\n    return giorno + \"/\" + mese + \"/\" + anno;\n  };\n\n  const getFormattedDate = (dataInput) => {\n    var anno = dataInput.split(\"/\")[2];\n    var mese = dataInput.split(\"/\")[1];\n    var giorno = dataInput.split(\"/\")[0];\n\n    return anno + \"-\" + mese + \"-\" + giorno;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <Navbar></Navbar>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n          <caption>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              endIcon={<Icon icon={fas.faPlus}></Icon>}\n              onClick={() => {\n                setIsAddingNewRow(true);\n              }}\n              disabled={isAddingNewRow}\n            >\n              AGGIUNGI NUOVO PROCLAMATORE\n            </Button>\n          </caption>\n          <TableHead>\n            <TableRow>\n              <TableCell\n                sx={{\n                  fontWeight: \"bold\",\n                  position: \"sticky\",\n                  top: 0,\n                  left: 0,\n                  zIndex: 2,\n                  backgroundColor: \"white\",\n                }}\n                align=\"center\"\n              >\n                NOME\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                CELLULARE\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                TELEFONO\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                INDIRIZZO\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                PAESE\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                VISITA INCORAGGIAMENTO\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                SERVIZIO-NICOLAS\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                SERVIZIO-RUBEN\n              </TableCell>\n              <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\">\n                ACTION\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data && (\n              <>\n                {Object.entries(data).map((row, index) => (\n                  <>\n                    {isEditing !== row[0] && (\n                      <TableRow key={`row-${index}`}>\n                        <TableCell\n                          align=\"center\"\n                          component=\"th\"\n                          scope=\"row\"\n                          sx={{\n                            fontWeight: \"bold\",\n                            position: \"sticky\",\n                            top: 0,\n                            left: 0,\n                            zIndex: 1,\n                            backgroundColor: \"white\",\n                          }}\n                        >\n                          {row[1].nome}\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].cellulare}\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].telefono}\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].indirizzo}\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].paese}\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1][\"visitaIncoraggiamento\"]}\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].nicolas}\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row[1].ruben}\n                        </TableCell>\n                        <TableCell\n                          align=\"center\"\n                          component=\"th\"\n                          scope=\"row\"\n                          sx={{ display: \"flex\", flexDirection: \"row\" }}\n                        >\n                          <Button\n                            onClick={() => {\n                              setIsEditing(row[0]);\n                              setFormValue(row[1]);\n                            }}\n                            variant=\"contained\"\n                          >\n                            <Icon icon={fas.faEdit}></Icon>\n                          </Button>\n                          <Button\n                            onClick={() => {\n                              removeRow(row[0]);\n                            }}\n                            variant=\"contained\"\n                            color=\"error\"\n                            sx={{ marginLeft: \"5px\" }}\n                          >\n                            <Icon icon={fas.faTrash}></Icon>\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                    {isEditing === row[0] && (\n                      <TableRow key={`row-${index}-edit`}>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"nome\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(e.target.value, \"nome\");\n                            }}\n                            value={formValue.nome}\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"cellulare\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(e.target.value, \"cellulare\");\n                            }}\n                            value={formValue.cellulare}\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"telefono\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(e.target.value, \"telefono\");\n                            }}\n                            value={formValue.telefono}\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"indirizzo\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(e.target.value, \"indirizzo\");\n                            }}\n                            value={formValue.indirizzo}\n                          ></TextField>\n                        </TableCell>\n\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"paese\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(e.target.value, \"paese\");\n                            }}\n                            value={formValue.paese}\n                          ></TextField>\n                        </TableCell>\n\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"visita incoraggiamento\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(\n                                transformData(e.target.value),\n                                \"visitaIncoraggiamento\"\n                              );\n                            }}\n                            type=\"date\"\n                            value={getFormattedDate(\n                              formValue.visitaIncoraggiamento\n                            )}\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"nicolas\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(\n                                transformData(e.target.value),\n                                \"nicolas\"\n                              );\n                            }}\n                            value={getFormattedDate(formValue.nicolas)}\n                            type=\"date\"\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <TextField\n                            fullWidth\n                            label=\"ruben\"\n                            variant=\"outlined\"\n                            onChange={(e) => {\n                              setValues(transformData(e.target.value), \"ruben\");\n                            }}\n                            value={getFormattedDate(formValue.ruben)}\n                            type=\"date\"\n                          ></TextField>\n                        </TableCell>\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                          <Button onClick={editRow} variant=\"contained\">\n                            <Icon icon={fas.faSave}></Icon>\n                          </Button>\n                          <Button\n                            onClick={() => {\n                              setIsEditing(\"\");\n                            }}\n                            variant=\"outlined\"\n                            sx={{ marginLeft: \"5px\" }}\n                          >\n                            <Icon icon={fas.faClose}></Icon>\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </>\n                ))}\n              </>\n            )}\n            {isAddingNewRow && (\n              <TableRow key={`add-row`}>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"nome\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(e.target.value, \"nome\");\n                    }}\n                    value={formValue.nome}\n                  ></TextField>\n                </TableCell>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"cellulare\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(e.target.value, \"cellulare\");\n                    }}\n                    value={formValue.cellulare}\n                  ></TextField>\n                </TableCell>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"telefono\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(e.target.value, \"telefono\");\n                    }}\n                    value={formValue.telefono}\n                  ></TextField>\n                </TableCell>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"indirizzo\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(e.target.value, \"indirizzo\");\n                    }}\n                    value={formValue.indirizzo}\n                  ></TextField>\n                </TableCell>\n\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"paese\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(e.target.value, \"paese\");\n                    }}\n                    value={formValue.paese}\n                  ></TextField>\n                </TableCell>\n\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"visita incoraggiamento\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(\n                        transformData(e.target.value),\n                        \"visitaIncoraggiamento\"\n                      );\n                    }}\n                    type=\"date\"\n                    value={getFormattedDate(formValue.visitaIncoraggiamento)}\n                  ></TextField>\n                </TableCell>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"nicolas\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(transformData(e.target.value), \"nicolas\");\n                    }}\n                    value={getFormattedDate(formValue.nicolas)}\n                    type=\"date\"\n                  ></TextField>\n                </TableCell>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  <TextField\n                    fullWidth\n                    label=\"ruben\"\n                    variant=\"outlined\"\n                    onChange={(e) => {\n                      setValues(transformData(e.target.value), \"ruben\");\n                    }}\n                    value={getFormattedDate(formValue.ruben)}\n                    type=\"date\"\n                  ></TextField>\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  component=\"th\"\n                  scope=\"row\"\n                  sx={{ display: \"flex\", flexDirection: \"row\" }}\n                >\n                  <Button onClick={setContattiData} variant=\"contained\">\n                    <Icon icon={fas.faSave}></Icon>\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      setIsAddingNewRow(false);\n                    }}\n                    variant=\"outlined\"\n                    sx={{ marginLeft: \"5px\" }}\n                  >\n                    <Icon icon={fas.faClose}></Icon>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <footer>\n        <p>© 2024 - GESTIONALE SAVA 2 </p>\n      </footer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Broadcasting from \"./broadcasting\";\nimport Comitive from \"./comitive\";\nimport Contatti from \"./contatti\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    children: [\n      { path: \"broadcasting\", element: <Broadcasting /> },\n      { path: \"comitive\", element: <Comitive /> },\n      { path: \"contatti\", element: <Contatti /> },\n      { path: \"\", element: <App /> },\n    ],\n  },\n]);\n\nroot.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <RouterProvider router={router} />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}